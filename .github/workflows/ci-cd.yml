# Name of the GitHub Actions workflow
name: ETL CI/CD Pipeline

# Defines the events that trigger the workflow
on:
    push:
        branches: [main] # Runs on pushes to the main branch
    pull_request:
        branches: [main] # Runs on pull requests targeting the main branch

# Defines the jobs to be executed
jobs:
    test:
        runs-on: ubuntu-latest # Specifies the runner environment (latest Ubuntu)
        steps:
        # Step 1: Checks out the repository code
        - name: Checkout code
          uses: actions/checkout@v3 # Uses the checkout action version 3

        # Step 2: Sets up Python environment
        - name: Set up Python
          uses: actions/setup-python@v4 # Uses the setup-python action version 4
          with:
            python-version: '3.11' # Specifies Python version to use

        # Step 3: Installs dependencies
        - name: Install dependencies
          run: pip install -r requirements.txt # Installs dependencies from requirements.txt

        # Step 3.5: Add jobs folder to PYTHONPATH
        - name: Set PYTHONPATH
          run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/jobs" >> $GITHUB_ENV

        # Step 4: Runs unit tests
        - name: Run tests
          run: pytest tests/ # Executes pytest on the tests directory

    # Job for deploying AWS Step Function and Glue jobs
    deploy:
        # This job runs only on pushes to the main branch
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        needs: test # This job depends on the completion of the 'test' job
        steps:
        # Step 1: Checks out the repository code
        - name: Checkout code
          uses: actions/checkout@v3 # Uses the checkout action version 3

        # Step 2: Configure AWS credentials
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS access key from GitHub secrets
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret key from GitHub secrets
            aws-region: eu-north-1 # Specifies AWS region for deployment

        # Step 3: Upload Glue job scripts to S3
        - name: Upload Glue job scripts to S3
          run: |
            aws s3 cp jobs/products_glue_job.py s3://aws-glue-assets-396468676537-eu-north-1/scripts/products_glue_job.py
            aws s3 cp jobs/order_glue_job.py s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_glue_job.py
            aws s3 cp jobs/order_items_glue_job.py s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_items_glue_job.py
            aws s3 cp jobs/xlsx_to_csv.py s3://aws-glue-assets-396468676537-eu-north-1/scripts/xlsx_to_csv.py

        # Step 4: Create or update Glue jobs
        - name: Deploy or update Glue jobs
          run: |
            # Create or update products_glue_job
            aws glue create-job --name products_glue_job --role arn:aws:iam::396468676537:role/GlueJobRole \
              --command "Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/products_glue_job.py" \
              --glue-version "4.0" --worker-type G.1X --number-of-workers 2 \
              || aws glue update-job --job-name products_glue_job \
              --job-update "Role=arn:aws:iam::396468676537:role/GlueJobRole,Command={Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/products_glue_job.py},GlueVersion=4.0,WorkerType=G.1X,NumberOfWorkers=2"

            # Create or update order_glue_job
            aws glue create-job --name order_glue_job --role arn:aws:iam::396468676537:role/GlueJobRole \
              --command "Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_glue_job.py" \
              --glue-version "4.0" --worker-type G.1X --number-of-workers 2 \
              || aws glue update-job --job-name order_glue_job \
              --job-update "Role=arn:aws:iam::396468676537:role/GlueJobRole,Command={Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_glue_job.py},GlueVersion=4.0,WorkerType=G.1X,NumberOfWorkers=2"

            # Create or update order_items_glue_job
            aws glue create-job --name order_items_glue_job --role arn:aws:iam::396468676537:role/GlueJobRole \
              --command "Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_items_glue_job.py" \
              --glue-version "4.0" --worker-type G.1X --number-of-workers 2 \
              || aws glue update-job --job-name order_items_glue_job \
              --job-update "Role=arn:aws:iam::396468676537:role/GlueJobRole,Command={Name=glueetl,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/order_items_glue_job.py},GlueVersion=4.0,WorkerType=G.1X,NumberOfWorkers=2"

            # Create or update xlsx_to_csv
            aws glue create-job --name xlsx_to_csv --role arn:aws:iam::396468676537:role/GlueJobRole \
              --command "Name=pythonshell,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/xlsx_to_csv.py" \
              --glue-version "4.0" --worker-type G.1X --number-of-workers 2 \
              || aws glue update-job --job-name xlsx_to_csv \
              --job-update "Role=arn:aws:iam::396468676537:role/GlueJobRole,Command={Name=pythonshell,ScriptLocation=s3://aws-glue-assets-396468676537-eu-north-1/scripts/xlsx_to_csv.py},GlueVersion=4.0,WorkerType=G.1X,NumberOfWorkers=2"

        # Step 5: Deploy or update AWS Step Function state machine
        - name: Deploy State Machine
          run: |
            aws stepfunctions update-state-machine \
              --state-machine-arn arn:aws:states:eu-north-1:396468676537:stateMachine:Lakehouse-step-function \
              --definition file://state_machine.json
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS access key from GitHub secrets
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret key from GitHub secrets
            AWS_REGION: eu-north-1 # Specifies AWS region for deployment